# narenm/dev-env is based on ubuntu:16.04
# Git location of dev-env
#   - https://github.com/naren-m/Dockerfiles/tree/master/dev-env
FROM narenm/py3
MAINTAINER Naren Mudivarthy <narenuday595@gmail.com>

# Installing prerequisites
RUN apt-get -y update

# Install Utils
# Install developer tools used to compile OpenCV 3.0
# Install packages used to process video streams and access frames from cameras
# The highgui  module relies on the GTK library, which you should install using the following command
# install libraries that are used to optimize various functionalities inside OpenCV, such as matrix operations
RUN apt-get -y install wget zip unzip \
    build-essential cmake pkg-config \
    libavcodec-dev libavformat-dev libswscale-dev \
    libv4l-dev libxvidcore-dev libx264-dev libgtk-3-dev \
    libatlas-base-dev gfortran

# Python development headers and libraries for Python 3.5
# Install pip and delete the cache directory
RUN apt-get -y install python3-dev python3-pip python3-tk python3-lxml python3-six \
    && wget https://bootstrap.pypa.io/get-pip.py && python3 get-pip.py \
    && rm -rf ~/.cache/pip/

# Installing numpy
RUN python3 -m pip install numpy && \
    wget https://github.com/Itseez/opencv/archive/3.1.0.zip -O opencv3.zip && \
    unzip -q opencv3.zip && mv /opencv-3.1.0 /opencv && \
    wget https://github.com/Itseez/opencv_contrib/archive/3.1.0.zip -O \
    opencv_contrib3.zip && \
    unzip -q opencv_contrib3.zip && mv /opencv_contrib-3.1.0 /opencv_contrib

RUN mkdir /opencv/build
WORKDIR /opencv/build

RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D INSTALL_C_EXAMPLES=OFF \
    -D ENABLE_PRECOMPILED_HEADERS=OFF \
    -D OPENCV_EXTRA_MODULES_PATH=/opencv_contrib/modules \
    -D PYTHON_EXECUTABLE=/usr/bin/python3 \
    -D BUILD_EXAMPLES=ON ..


RUN make -j4 && make install && ldconfig

RUN pip --no-cache-dir install \
        ipykernel \
        jupyter \
        matplotlib \
        scipy \
        sklearn \
        pandas \
        Pillow \
        && \
    python3 -m ipykernel.kernelspec

# IPython
EXPOSE 8888

WORKDIR /code